{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TouchDesigner Data Science About This project is used to organize my thoughts on manefestations of data science using TouchDesigner. From my graduate work in space physics through the six years I spent at NASA, I've always been fascinated with the aesthetics of data visualization. As the field of data science has emerged, the need to communicate these ideas has never been greater. By providing a platform for real-time analysis and exploration, TouchDesigner offers a unique approach to this challenge. Moreover, the ability to rapidly prototype ideas using visual programing is a huge benefit: TouchDesigner's graph-based metaphors are very similar to the now-defunct OpenDX, which I used for the majority of PhD research in space physics. Moreover, TouchDesigner uses python under the hood, which has become the weapon of choice for most data scientists. Above shows a realtime visualization of the acceleration I feel when I'm skateboarding. The color of the edges comes from the components of acceleration, which I get from the phone in my back pocket. The time-delay between the edge trails is constant, so they get further apart the faster I'm going.","title":"Home"},{"location":"#touchdesigner-data-science","text":"","title":"TouchDesigner Data Science"},{"location":"#about","text":"This project is used to organize my thoughts on manefestations of data science using TouchDesigner. From my graduate work in space physics through the six years I spent at NASA, I've always been fascinated with the aesthetics of data visualization. As the field of data science has emerged, the need to communicate these ideas has never been greater. By providing a platform for real-time analysis and exploration, TouchDesigner offers a unique approach to this challenge. Moreover, the ability to rapidly prototype ideas using visual programing is a huge benefit: TouchDesigner's graph-based metaphors are very similar to the now-defunct OpenDX, which I used for the majority of PhD research in space physics. Moreover, TouchDesigner uses python under the hood, which has become the weapon of choice for most data scientists. Above shows a realtime visualization of the acceleration I feel when I'm skateboarding. The color of the edges comes from the components of acceleration, which I get from the phone in my back pocket. The time-delay between the edge trails is constant, so they get further apart the faster I'm going.","title":"About"},{"location":"startup/","text":"Quickstart The first order of business is to get a compatible python environment for TouchDesigner. I prefer miniconda3 for this. Miniconda avoids the pitfalls of a system-wide install while giving you the flexibility to add whatever modules you'll need. Miniconda To install miniconda3 , go here . Don't worry about the python version just yet, either one will do. (We'll specify the appropriate python version when we create the environment below.) After you download, run the installer and you should be able to run conda commands when you open a terminal. To see what commands are available, run: conda --help Creating an environment To create your TouchDesigner environment, run the conda command conda create -n touchd python==3.5 numpy==1.11.3 Note As of this writing, TouchDesigner uses python==3.5 and numpy==1.11.3. This will likely change in the future! Now that your environment is created, you can activate it with conda activate touchd This will change your command prompt to (touchd)$ so you'll know you're working in it. From now on, any packages you install will be tied to this environment. Pointing to the environment Once you've got your environment set up, you need to inform TouchDesigner of the location of it's site packages - that is, the directory where all the installed libraries live. While your touchd environment is active, type: python -m site Copy the path that ends in site-packages (under sys.path). Open TouchDesigner -> edit -> preferences -> General -> Python Module Path. Paste it there. Note On Windows, you will likely have \\\\ in the path. Replace those with / . Close and reopen touch designer. Data Science packages Pandas Pandas is perhaps the most ubiquitous data science package out there, being adept at remixing large arrays of data (so long as it fits in memory). The latest version of pandas prefers numpy >= 1.12.0, which is not what TouchDesigner currently uses. The earliest stable release of pandas that works with TouchDesigner is 0.23.0 . pip install pandas==0.23.```0 so you'll know you're working in it. From now on, any packages you install will be tied to this environment. Dask If you find yourself needing handle datasets to large to fit in memory, then you should consider using Dask . It allows you to easily launch tasks on multiple worker processes, has parallelized versions of pandas dataframes, several deployment options, and great documentation.","title":"Setup"},{"location":"startup/#quickstart","text":"The first order of business is to get a compatible python environment for TouchDesigner. I prefer miniconda3 for this. Miniconda avoids the pitfalls of a system-wide install while giving you the flexibility to add whatever modules you'll need.","title":"Quickstart"},{"location":"startup/#miniconda","text":"To install miniconda3 , go here . Don't worry about the python version just yet, either one will do. (We'll specify the appropriate python version when we create the environment below.) After you download, run the installer and you should be able to run conda commands when you open a terminal. To see what commands are available, run: conda --help","title":"Miniconda"},{"location":"startup/#creating-an-environment","text":"To create your TouchDesigner environment, run the conda command conda create -n touchd python==3.5 numpy==1.11.3 Note As of this writing, TouchDesigner uses python==3.5 and numpy==1.11.3. This will likely change in the future! Now that your environment is created, you can activate it with conda activate touchd This will change your command prompt to (touchd)$ so you'll know you're working in it. From now on, any packages you install will be tied to this environment.","title":"Creating an environment"},{"location":"startup/#pointing-to-the-environment","text":"Once you've got your environment set up, you need to inform TouchDesigner of the location of it's site packages - that is, the directory where all the installed libraries live. While your touchd environment is active, type: python -m site Copy the path that ends in site-packages (under sys.path). Open TouchDesigner -> edit -> preferences -> General -> Python Module Path. Paste it there. Note On Windows, you will likely have \\\\ in the path. Replace those with / . Close and reopen touch designer.","title":"Pointing to the environment"},{"location":"startup/#data-science-packages","text":"","title":"Data Science packages"},{"location":"startup/#pandas","text":"Pandas is perhaps the most ubiquitous data science package out there, being adept at remixing large arrays of data (so long as it fits in memory). The latest version of pandas prefers numpy >= 1.12.0, which is not what TouchDesigner currently uses. The earliest stable release of pandas that works with TouchDesigner is 0.23.0 . pip install pandas==0.23.```0 so you'll know you're working in it. From now on, any packages you install will be tied to this environment.","title":"Pandas"},{"location":"startup/#dask","text":"If you find yourself needing handle datasets to large to fit in memory, then you should consider using Dask . It allows you to easily launch tasks on multiple worker processes, has parallelized versions of pandas dataframes, several deployment options, and great documentation.","title":"Dask"}]}